import { Cache } from './interfaces';
export declare abstract class ArrayCache<T> implements Cache<T> {
    protected _payloads: T[];
    abstract add(value: T): void;
    forEach(callback: (value: T) => void): void;
}
export declare class ValueCache<T> extends ArrayCache<T> {
    add(value: T): void;
}
export declare class CollectionCache<T> extends ArrayCache<T> {
    add(value: T): void;
}
